- id: d454d06e-4a7d-47d2-b8af-b3c877eceed5
  name: Postgres
  documentationUrl: https://docs.monoid.co
  dockerImage: monoidco/monoid-postgres
  dockerTag: 0.0.1
  logo: postgres.svg
  manual: false
  spec:
    $schema: http://json-schema.org/draft-07/schema#
    properties:
        database:
            default: postgres
            description: The default database to connect to. Monoid can scan for all databases on your instance, but this is the one the system will connect to initially.
            order: 2
            title: Default Database
            type: string
        exclude_dbs:
            default: []
            description: A list of databases to exclude for silo discovery.
            items:
                type: string
            minItems: 0
            order: 8
            title: Exclude DBs
            type: array
            uniqueItems: true
        hostname:
            description: The hostname of the database
            order: 0
            title: Hostname
            type: string
        password:
            description: The password for the database
            order: 4
            secret: true
            title: Password
            type: string
        port:
            default: 5432
            description: The port of the database
            order: 1
            title: Port
            type: number
        scan_all:
            default: true
            description: If true, Monoid will scan all databases.
            order: 5
            title: Scan All DBs
            type: boolean
        ssl:
            default: false
            description: Connect using SSL.
            order: 6
            title: Connect using SSL
            type: boolean
        username:
            description: The username for the databse.
            order: 3
            title: Username
            type: string
    required:
        - username
        - hostname
        - password
        - port
        - ssl
        - database
    type: object
- id: cd4ca115-9761-476b-8404-6507b852fd82
  name: MySQL
  documentationUrl: https://docs.monoid.co
  dockerImage: monoidco/monoid-mysql
  dockerTag: 0.0.1
  logo: mysql.svg
  manual: false
  spec:
    $schema: http://json-schema.org/draft-07/schema#
    properties:
        database:
            description: The database to connect to.
            order: 2
            title: Database
            type: string
        hostname:
            description: The hostname of the database
            order: 0
            title: Hostname
            type: string
        password:
            description: The password for the database
            order: 4
            secret: true
            title: Password
            type: string
        port:
            description: The port of the database
            order: 1
            title: Port
            type: number
        username:
            description: The username for the database.
            order: 3
            title: Username
            type: string
    required:
        - username
        - hostname
        - password
        - port
        - database
    type: object
- id: df51dc01-28ba-4785-bc94-a665afcf698b
  name: BigQuery
  documentationUrl: https://docs.monoid.co
  dockerImage: monoidco/monoid-bigquery
  dockerTag: 0.0.1
  logo: bigquery.svg
  manual: false
  spec:
    $schema: http://json-schema.org/draft-07/schema#
    properties:
        exclude_dbs:
            default: []
            description: A list of databases to exclude for silo discovery.
            items:
                type: string
            minItems: 0
            order: 1
            title: Exclude DBs
            type: array
            uniqueItems: true
        scan_all:
            default: true
            description: If true, Monoid will scan all databases.
            order: 2
            title: Scan All DBs
            type: boolean
        service_account_json:
            description: The authentication key JSON for the created service account.
            order: 0
            secret: true
            title: Service Account JSON
            type: string
    required:
        - service_account_json
    type: object
- id: eedf094b-21e8-466c-87a4-7d86974e0fe6
  name: Amazon Redshift
  documentationUrl: https://docs.monoid.co
  dockerImage: monoidco/monoid-redshift
  dockerTag: 0.0.1
  logo: redshift.svg
  manual: false
  spec:
    $schema: http://json-schema.org/draft-07/schema#
    properties:
        database:
            default: dev
            description: The default database to connect to. Monoid can scan for all databases on your instance, but this is the one the system will connect to initially.
            order: 2
            title: Default Database
            type: string
        exclude_dbs:
            default: []
            description: A list of databases to exclude for silo discovery.
            items:
                type: string
            minItems: 0
            order: 8
            title: Exclude DBs
            type: array
            uniqueItems: true
        host:
            description: The Amazon Redshift host address
            order: 1
            title: Host
            type: string
        password:
            description: The password for the database
            order: 4
            secret: true
            title: Password
            type: string
        scan_all:
            default: true
            description: If true, Monoid will scan all databases.
            order: 6
            title: Scan All DBs
            type: boolean
        username:
            description: The username for the databse.
            order: 3
            title: Username
            type: string
    required:
        - username
        - password
        - host
        - database
    type: object
- id: 35b27655-f7c2-4409-a8a8-2246482af7c0
  name: Snowflake
  documentationUrl: https://docs.monoid.co
  dockerImage: monoidco/monoid-snowflake
  dockerTag: 0.0.1
  logo: snowflake.svg
  manual: false
  spec:
    $schema: http://json-schema.org/draft-07/schema#
    properties:
        account:
            description: The Snowflake account string
            order: 1
            title: Account
            type: string
        database:
            default: SNOWFLAKE
            description: The default database to connect to. Monoid can scan for all databases in Snowflake, but this is the one the system will connect to initially.
            order: 2
            title: Default Database
            type: string
        exclude_dbs:
            default: []
            description: A list of databases to exclude for silo discovery.
            items:
                type: string
            minItems: 0
            order: 8
            title: Exclude DBs
            type: array
            uniqueItems: true
        password:
            description: The password for the Snowflake connection.
            order: 4
            secret: true
            title: Password
            type: string
        scan_all:
            default: true
            description: If true, Monoid will scan all databases.
            order: 6
            title: Scan All DBs
            type: boolean
        username:
            description: The username for the Snowflake connection.
            order: 3
            title: Username
            type: string
        warehouse:
            description: The warehouse to use for database operations
            order: 5
            title: Warehouse
            type: string
    required:
        - username
        - password
        - account
        - warehouse
        - schemas
        - database
    type: object
- id: 0ba2ffc8-07a6-4e04-86ad-45e81f098697
  name: Intercom
  documentationUrl: https://docs.monoid.co
  dockerImage: monoidco/monoid-intercom
  dockerTag: 0.0.1
  logo: intercom.svg
  manual: false
  spec:
    $schema: http://json-schema.org/draft-07/schema#
    properties:
        access_token:
            description: Your Intercom Access Token
            order: 2
            secret: true
            title: Access Token
            type: string
        workspace:
            description: Your Intercom Workspace
            order: 1
            title: Workspace Name
            type: string
    required:
        - access_token
        - workspace
    type: object
- id: f04a477d-9112-4c07-9e98-23615118f307
  name: Manual
  documentationUrl: ""
  dockerImage: ""
  dockerTag: ""
  logo: monoid.svg
  manual: true
- id: c67f04e0-9063-4a90-9555-17bde7554d5e
  name: Mixpanel
  documentationUrl: https://docs.monoid.co
  dockerImage: monoidco/monoid-mixpanel
  dockerTag: 0.0.1
  logo: mixpanel.svg
  manual: false
  spec:
    $schema: http://json-schema.org/draft-07/schema#
    properties:
        api_secret:
            description: The Project's API secret
            order: 6
            secret: true
            title: API Secret
            type: string
        oauth_secret:
            description: The Mixpanel GDPR OAuth secret
            order: 5
            secret: true
            title: GDPR OAuth Secret
            type: string
        project_id:
            description: The ID of the Mixpanel project
            order: 2
            title: Project ID
            type: string
        project_name:
            description: The name of the Mixpanel project
            order: 0
            title: Project Name
            type: string
        project_token:
            description: The token for the Mixpanel project
            order: 1
            title: Project Token
            type: string
        service_account_password:
            description: The password for the Mixpanel service account
            order: 4
            secret: true
            title: Service Account Password
            type: string
        service_account_username:
            description: The username for the Mixpanel service account
            order: 3
            title: Service Account Username
            type: string
    required:
        - project_name
        - project_token
        - oauth_secret
        - api_secret
    type: object
- id: 5ca5915b-047e-4a97-bd38-14266a43cc32
  name: MariaDB
  documentationUrl: https://docs.monoid.co
  dockerImage: monoidco/monoid-mariadb
  dockerTag: 0.0.1
  logo: mariadb.svg
  manual: false
  spec:
    $schema: http://json-schema.org/draft-07/schema#
    properties:
        database:
            description: The database to connect to.
            order: 2
            title: Database
            type: string
        hostname:
            description: The hostname of the database
            order: 0
            title: Hostname
            type: string
        password:
            description: The password for the database
            order: 4
            secret: true
            title: Password
            type: string
        port:
            description: The port of the database
            order: 1
            title: Port
            type: number
        username:
            description: The username for the database.
            order: 3
            title: Username
            type: string
    required:
        - username
        - hostname
        - password
        - port
        - database
    type: object
- id: c748cae7-f22b-4d44-9c96-7d3509a293d4
  name: Microsoft SQL Server
  documentationUrl: https://docs.monoid.co
  dockerImage: monoidco/monoid-mysql
  dockerTag: 0.0.1
  logo: microsoft_sql_server.svg
  manual: false
  spec:
    $schema: http://json-schema.org/draft-07/schema#
    properties:
        database:
            description: The database to connect to.
            order: 2
            title: Database
            type: string
        hostname:
            description: The hostname of the database
            order: 0
            title: Hostname
            type: string
        password:
            description: The password for the database
            order: 4
            secret: true
            title: Password
            type: string
        port:
            description: The port of the database
            order: 1
            title: Port
            type: number
        username:
            description: The username for the database.
            order: 3
            title: Username
            type: string
    required:
        - username
        - hostname
        - password
        - port
        - database
    type: object
