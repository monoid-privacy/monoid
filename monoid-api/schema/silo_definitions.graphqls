scalar Map

input UpdateSiloDefinitionInput {
    id: ID!

    name: String
    description: String

    siloData: String
}

type SiloDefinition {
    id: ID!
    name: String!
    description: String
    siloSpecification: SiloSpecification @goField(forceResolver: true)
    dataSources: [DataSource!] @goField(forceResolver: true)
    siloConfig: Map
}

input CreateSiloDefinitionInput {
    description: String
    siloSpecificationID: ID!
    workspaceID: ID!
    siloData: String
    name: String!
}

extend type Query {
    siloDefinition(id: ID!): SiloDefinition!
}

extend type Mutation {
    createSiloDefinition(input: CreateSiloDefinitionInput): SiloDefinition!
    updateSiloDefinition(input: UpdateSiloDefinitionInput): SiloDefinition!
    deleteSiloDefinition(id: ID!): ID!
}

extend type Workspace {
    siloDefinitions: [SiloDefinition!]! @goField(forceResolver: true)
}
